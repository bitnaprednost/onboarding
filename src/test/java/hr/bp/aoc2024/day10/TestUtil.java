package hr.bp.aoc2024.day10;

import java.util.List;

public class TestUtil {

    public static List<String> getTestInput() {
        return List.of("3330333\n",
                "3331333\n",
                "9992999\n",
                "6543456\n",
                "7111117\n",
                "8111118\n",
                "9111119");
    }

    public static List<String> getFourTrailheadsInput() {
        return List.of("1190889\n",
                "7771598\n",
                "9992997\n",
                "6543456\n",
                "7651987\n",
                "8761111\n",
                "9871111");
    }

    public static List<String> getThreeTrailheadsInput() {
        return List.of("1022911\n" ,
                "2444811\n" ,
                "3111711\n" ,
                "4567654\n" ,
                "1118113\n" ,
                "1119442\n" ,
                "7777701");
    }

    public static List<String> getFinalTestTrailheadsInput() {
        return List.of("89010123\n" ,
                "78121874\n" ,
                "87430965\n" ,
                "96549874\n" ,
                "45678903\n" ,
                "32019012\n" ,
                "01329801\n" ,
                "10456732");
    }

    public static List<String> getFinalTrailheadsInput() {
        return List.of("101987698323656762989721011010987456780121243210\n" ,
                "234012567210547891078892012101072345891030984569\n" ,
                "142103454345432012367743423232161654322345855678\n" ,
                "051054965236701103456656894343450783210496764789\n" ,
                "962167850149896543245765765456980892108587053298\n" ,
                "873076701056787600130876554967821876549652142103\n" ,
                "954987432165634512021989478876782965678703234012\n" ,
                "765876541074328763145672369805493454302212547654\n" ,
                "896968953981019854236981054012349854211243478943\n" ,
                "657857762876567610765100340101238763210798545692\n" ,
                "765446891001498723834232215293045678189877632781\n" ,
                "802335432312387654923341004382167669012368701020\n" ,
                "911124701421019870110056905673458978975459345210\n" ,
                "320099876598943065232167810569898963287561276349\n" ,
                "456787756787854104343054321678107854196510389458\n" ,
                "329878941012763210454988934521256981075431343367\n" ,
                "019561030323678923567867141010345410987123454321\n" ,
                "878432321410589854543252012367894322346001067800\n" ,
                "965678798523470189630141043454387011055432108912\n" ,
                "234309657631063238745632658965296545765443297983\n" ,
                "103210545432154127030745667870101239812344589854\n" ,
                "123451236943061032121836789654320149801256678765\n" ,
                "018760147858978945412921078761012456789107967810\n" ,
                "569676546567167656503832099908901327898798856921\n" ,
                "678989432100016987434512187819832010145610765430\n" ,
                "567010498761221498729603456520743016234431254321\n" ,
                "154321343254330327018777895431654327652342341232\n" ,
                "034501656189945012310689765432343678541056540765\n" ,
                "127652783076876763423676543087652589230767439856\n" ,
                "098743692105677894534589832198101450121858921045\n" ,
                "769878901234786765109689101265012376543929012234\n" ,
                "878963210121099889278770125654321289012210430123\n" ,
                "987654323452016776308765210787430100101121522434\n" ,
                "670122014560125655419654354896508921089037611078\n" ,
                "549831009871234534328323763011017632176548902369\n" ,
                "038742789965676548933214892182126543210423098454\n" ,
                "125653656234987837654300321099234304321012167823\n" ,
                "034564540165832921020311456788765015698143456910\n" ,
                "321078939874981021011232321001298923789874301501\n" ,
                "012981543403876120102345409876387654301565217652\n" ,
                "565470034512985433201456912345401543214321438943\n" ,
                "678321127621076894398567810126918754265410521032\n" ,
                "099128938902345765487656787637829662178345621001\n" ,
                "187019878213765496567678698540134543089210782789\n" ,
                "236520569347874385438569187687238956745432893610\n" ,
                "945431450956901276329430056796549875856721894523\n" ,
                "876532321876101301210321149823456721949890765434\n" ,
                "765321012765432340343434231012545430132101256545");
    }

    public static int[][] getExpectedTestInputTopographicalMap() {
        int[][] topographicalMap = {{3, 3, 3, 0, 3, 3, 3},
                {3, 3, 3, 1, 3, 3, 3},
                {9, 9, 9, 2, 9, 9, 9},
                {6, 5, 4, 3, 4, 5, 6},
                {7, 1, 1, 1, 1, 1, 7},
                {8, 1, 1, 1, 1, 1, 8},
                {9, 1, 1, 1, 1, 1, 9}};

        return topographicalMap;
    }
}
